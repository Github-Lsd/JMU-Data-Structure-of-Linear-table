Answer:



#include<bits/stdc++.h>
#define N 1001
using namespace std;
int main()
{
	int i,j,zhishu,xishu,cnt=0;
	int a[N]={0},b[N]={0},c[2*N]={0},d[N]={0};
	cin>>i;
	for(;i>0;i--){
		cin>>xishu>>zhishu;
		a[zhishu]=xishu;
	}
	cin>>i;
	for(;i>0;i--){
		cin>>xishu>>zhishu;
		b[zhishu]=xishu;
	}
	for(i=N-1;i>=0;i--){
		if(a[i]){
			for(j=N-1;j>=0;j--){
				if(b[j]){
					c[i+j]+=a[i]*b[j];
				}
			}
		}
	}
	int flag=0;
	for(i=2*N-1;i>=0;i--){
		if(flag==0){
			if(c[i]!=0){
				cout<<c[i]<<" "<<i;
				flag=1;
			}
		}
		else if(flag==1){
			if(c[i]!=0){
				cout<<" "<<c[i]<<" "<<i;
			}
		}
	}
	if(flag==0){
		cout<<"0 0";
	}
	cout<<endl;
	for(i=N-1;i>=0;i--){
		d[i]+=a[i];
		d[i]+=b[i];
	}
	flag=0;
	for(i=N-1;i>=0;i--){
		if(flag==0){
			if(d[i]!=0){
				cout<<d[i]<<" "<<i;
				flag=1;
			}
		}
		else if(flag==1){
			if(d[i]!=0){
				cout<<" "<<d[i]<<" "<<i;
			}
		}
	}
	if(flag==0){
		cout<<"0 0";
	}
	return 0;
 } 
 
 
 
Problem:
 
设计函数分别求两个一元多项式的乘积与和。

输入格式:
输入分2行，每行分别先给出多项式非零项的个数，再以指数递降方式输入一个多项式非零项系数和指数（绝对值均为不超过1000的整数）。数字间以空格分隔。

输出格式:
输出分2行，分别以指数递降方式输出乘积多项式以及和多项式非零项的系数和指数。数字间以空格分隔，但结尾不能有多余空格。零多项式应输出0 0。

输入样例:
4 3 4 -5 2  6 1  -2 0
3 5 20  -7 4  3 1
输出样例:
15 24 -25 22 30 21 -10 20 -21 8 35 6 -33 5 14 4 -15 3 18 2 -6 1
5 20 -4 4 -5 2 9 1 -2 0
